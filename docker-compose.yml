version: "3.9"

services:
  db:
    image: ${DB_IMAGE}
    container_name: ${DB_CONTAINER}
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p${DB_ROOT_PASSWORD} --silent || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 30s

  backend:
    build:
      context: ./backend
    container_name: ${BACKEND_CONTAINER}
    restart: unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    working_dir: /var/www/html
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    environment:
      - RUN_MIGRATIONS=${RUN_MIGRATIONS}
    healthcheck:
      test: ["CMD-SHELL", "php -r \"exit(@file_get_contents('http://127.0.0.1:${BACKEND_PORT}/ping')===false?1:0);\""]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 120s
    command: >
      sh -lc "
      cp -n .env.example .env &&
      composer install --no-interaction --prefer-dist --no-progress &&
      php artisan key:generate --force &&
      [ \"$RUN_MIGRATIONS\" = \"true\" ] && php artisan migrate --force || true &&
      php artisan optimize &&
      php artisan serve --host=0.0.0.0 --port=${BACKEND_PORT}
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ${FRONTEND_CONTAINER}
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "${FRONTEND_PORT}:5173"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  db_data:
